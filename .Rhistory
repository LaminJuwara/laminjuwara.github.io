install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
?thumbnail
library(metalr)
data("sample_metarr_data")
class(sample_metarr_data)
ncol(sample_metarr_data)
sample_metarr_data
data("statindata")
statindata
statindata
statindata[1,2:5]
tt<-statindata[1,2:5]
(tt[1]/tt[3])/(tt[2]/tt[3])
(tt[1]/tt[3])/(tt[2]/tt[4])
(tt[1]/tt[2])/(tt[3]/tt[4])
(statindata[,2]/statindata[,3])/(statindata[,4]/statindata[,5])
(statindata[,2]/statindata[,3])/(statindata[,4]/statindata[,5])
(statindata[,2]/statindata[,4])/(statindata[,3]/statindata[,5])
ncol(statindata)
class(statindata)
statindata$study
str(statindata$HPcase)
str(statindata$HPcase)=="num"
class(statindata$HPcase)
class(statindata$study)
class(statindata[,])
class(statindata[,1:4])
class(statindata[,1])
class(statindata[,c(1,2)])
typeof(statindata)
class(statindata[,1])!="numeric"
class(statindata[,1])!="numeric"
statindata[,1]
class(statindata[,1])
class(statindata[,1])=="numeric"
class(statindata[,2])=="numeric"
class(statindata[,3])=="numeric"
class(statindata[,4])=="numeric"
class(statindata[,5])=="numeric"
class(c(1,2))
tt=c(3,33)
str(tt)
refval=0.001
class(refval)
knitr::opts_chunk$set(echo = TRUE)
# test set
n=100
sigma.star=1/2
beta.star=rnorm(p)
X=cbind(1, matrix(rnorm(n*(p-1)), nrow=n, ncol=(p-1)))
# test set
n=100
p=4
sigma.star=1/2
beta.star=rnorm(p)
X=cbind(1, matrix(rnorm(n*(p-1)), nrow=n, ncol=(p-1)))
y=X%*%beta.star + sigma.star*rnorm(n)
head(cbind(y,X))
testdata=data.frame(cbind(y,X));
colnames(testdata)<-c("y",paste0("X",0:(p-1),sep = ""))
testdat<-testdata[,-2]
beta.star
testdata=data.frame(cbind(y,X));
colnames(testdata)<-c("y",paste0("X",0:(p-1),sep = ""))
testdat<-testdata[,-2]
knitr::knit("~/Desktop/06-Bios691 data analysis/assignment-5 oscars/blog/oscarsprediction_2020.Rmd")
knitr::opts_chunk$set(echo = TRUE)
ds=read.xlsx("OscarsDataset.xlsx")
# ch is the indicator or win or not, 1 is win, 2 is no win and 0 is NA
ds$win = 1*(ds$Ch==1)+ 0*(ds$Ch==2);
ds$win[ds$Ch==0] = NA;
#table(ds$win,useNA="always")
## DS:   reduced ds. .. best picture (PP)
## just the IMBD movie rating (Pardoe called it called WR)
alltest = ds[ds$win %in% 0:1 & !is.na(ds$WR),]
DS=ds[ds$win %in% 0:1 & ds$PP==1 & !is.na(ds$WR),
c("Year","Name","PP","win","WR")]
#table(DS$win,DS$Year)
#DS[DS$Year==1928,] ## check !! 2 winners / 6. ? coding
# sort by Year (riskset). NB.  NB # Alway sort the riskset by the Year of production
# important because fitted values are sorted by this
DS=DS[order(DS$Year),]
# tail(DS,14)
fit = clogit(win ~ WR + strata(Year), data=DS)
#fit
#str(fit)
DS$fittedLP = fit$linear.predictors ;
#tail(DS,14)
# check what linear predictors (LPs) really are
#tail(cbind(fit$coefficients * (DS$WR - fit$means),DS$fittedLP),20)
# fitted probabilities, riskset by riskset...
DS$exp.LP = exp(DS$fittedLP)
sums=aggregate(DS$exp.LP,by=list(Year=DS$Year),sum)
names(sums)[2] = "sum.exp.LP"
DS= merge(DS,sums,by="Year")
#length(DS[,1])
#tail(DS,14)
DS$fitted.prob.Win = DS$exp.LP/DS$sum.exp.LP # scale so add to 1
#tail(DS,14)
#check
#tail(aggregate(DS$fitted.prob.Win,by=list(Year=DS$Year),sum))
knitr::knit(input = "~/Desktop/06-Bios691 data analysis/assignment-5 oscars/blog/oscarsprediction_2020.Rmd",output = "./_posts/2020-02-08-oscars.md")
